{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"discon",
				"tolerance_on_discontinuity"
			],
			[
				"tole",
				"tolerance_on_discontinuity"
			],
			[
				"zero_de",
				"zero_derivative_tolerance"
			],
			[
				"non_",
				"non_zero_derivative_interval"
			],
			[
				"resul",
				"result_types"
			],
			[
				"Tra",
				"TransmissionPathways"
			],
			[
				"supported",
				"_supportedConfigurationTypes"
			],
			[
				"Device",
				"DeviceDensityOfStates"
			],
			[
				"De",
				"DeviceDensityOfStates"
			],
			[
				"Tr",
				"TransmissionPathways"
			],
			[
				"add",
				"addGateVoltages"
			],
			[
				"assertIsNo",
				"assertIsNotNone"
			],
			[
				"Transm",
				"TransmissionSpectrum"
			],
			[
				"el",
				"elif"
			],
			[
				"gate_scan_",
				"gate_scan_objects"
			],
			[
				"gate_volta",
				"gate_voltages_new"
			],
			[
				"assert",
				"assertAlmostEqual"
			],
			[
				"ref",
				"refreshStudyState"
			],
			[
				"fun",
				"func_wrapper"
			],
			[
				"workflow_lo",
				"workflow_log_1"
			],
			[
				"gate",
				"gateVoltage"
			],
			[
				"unfini",
				"unfinished_tasks"
			],
			[
				"logFilename",
				"logFilenameIdentifier"
			],
			[
				"lo",
				"logFilenamePrefix"
			],
			[
				"NL",
				"NLExecutionError"
			],
			[
				"workl",
				"workflow_new"
			],
			[
				"unique",
				"uniqueId"
			],
			[
				"_require",
				"_requires_by_id"
			],
			[
				"get",
				"getTemporaryFileName"
			],
			[
				"cop",
				"configurationCopy"
			],
			[
				"values",
				"values_before_saving"
			],
			[
				"Compute",
				"ComputerScienceUtilities"
			],
			[
				"str",
				"strain_correction"
			],
			[
				"Workflo",
				"WorkflowRunner"
			],
			[
				"inje",
				"injectCorrectionOnCalculator"
			],
			[
				"inj",
				"injectCorrection"
			],
			[
				"num",
				"numerical_accuracy_parameters"
			],
			[
				"environ",
				"environmental_correction"
			],
			[
				"Sla",
				"SlaterKosterStrainCorrection"
			],
			[
				"strain",
				"strained_configuration"
			],
			[
				"Compu",
				"ComputerScienceUtilities"
			],
			[
				"Work",
				"WorkflowRunner"
			],
			[
				"sub",
				"subWorkflowFromTasks"
			],
			[
				"uni",
				"uniqueIdsFromLabel"
			],
			[
				"_bu",
				"_buildSubGraphWithDependencies"
			],
			[
				"node",
				"nodes_and_predecessors"
			],
			[
				"dep",
				"dependencyGraph"
			],
			[
				"indep",
				"independent_task_0"
			],
			[
				"In",
				"IndependentTask"
			],
			[
				"tr",
				"transmissionArgs"
			],
			[
				"trans",
				"transmission_args"
			],
			[
				"upda",
				"update_gated_configuration_task"
			],
			[
				"Tran",
				"TransmissionSpectrum"
			],
			[
				"setAndCh",
				"setAndCheckBias"
			],
			[
				"__gate",
				"__gate_voltage"
			],
			[
				"Update",
				"UpdateGatedConfiguration"
			],
			[
				"Up",
				"UpdateGatedConfiguration"
			],
			[
				"ge",
				"getSparseCSR"
			],
			[
				"local",
				"local_configuration"
			],
			[
				"ele",
				"electrode_configuration"
			],
			[
				"Con",
				"ConfigurationCopy"
			],
			[
				"assertSe",
				"assertSequencesAlmostEqual"
			],
			[
				"orbita",
				"orbital_to_subshell"
			],
			[
				"orbit",
				"orbital_to_l"
			],
			[
				"orbital_",
				"orbital_to_center"
			],
			[
				"shift",
				"shift_constant_map"
			],
			[
				"numberOfOrbital",
				"numberOfOrbitalsOnCenter"
			],
			[
				"neigh",
				"neighbourList"
			],
			[
				"process",
				"processGrid"
			],
			[
				"projected",
				"projected_fft"
			],
			[
				"fold",
				"foldNoncollinearMatrix"
			],
			[
				"updo",
				"updown_full"
			],
			[
				"CPP_",
				"CPPUNIT_ASSERT_DOUBLES_EQUAL"
			],
			[
				"N",
				"N"
			],
			[
				"nub",
				"number_of_cells"
			],
			[
				"nj",
				"nj"
			],
			[
				"generate",
				"generateRandomSpinMatrixAndPhases"
			],
			[
				"Comple",
				"ComplexMatrix"
			],
			[
				"test",
				"testUnsupportedNonCompactMatrix"
			],
			[
				"distributed",
				"distributedFourierTransform"
			],
			[
				"Complex",
				"ComplexDistributedMatrix"
			],
			[
				"distribu",
				"distributed_upup_component"
			],
			[
				"den",
				"density_matrix_calculator"
			],
			[
				"Huckel",
				"HuckelCalculator"
			],
			[
				"s",
				"schroedinger_container"
			],
			[
				"Check",
				"Checkpoint"
			],
			[
				"Comp",
				"ComputerScienceUtilities"
			],
			[
				"calcu",
				"calculateDensityMatrix"
			],
			[
				"DeviceLCAO",
				"DeviceLCAOCalculatorToken"
			],
			[
				"semi",
				"semiCircleContourDefault"
			],
			[
				"asser",
				"assertAlmostEqual"
			],
			[
				"Effective",
				"EffectiveMass"
			],
			[
				"equi",
				"equilibrium_contour_default"
			],
			[
				"DeviceL",
				"DeviceLCAOCalculatorToken"
			],
			[
				"contourP",
				"contourParametersDefault"
			],
			[
				"else",
				"else"
			],
			[
				"Semi",
				"SemiCircleContour"
			],
			[
				"electrode",
				"electrodeFermiLevels"
			],
			[
				"scop",
				"scope_execute"
			],
			[
				"KPOINT",
				"KPOINT"
			],
			[
				"kpoint",
				"kpoint_shift"
			],
			[
				"saving",
				"saving_scf_disabled"
			],
			[
				"sy",
				"sync_on"
			],
			[
				"range",
				"range_sync"
			],
			[
				"Am",
				"Angstrom"
			],
			[
				"log",
				"log_filename_prefix"
			],
			[
				"nb",
				"nb"
			],
			[
				"re",
				"repetitions_type"
			],
			[
				"use",
				"use_wigner_seitz_scheme"
			],
			[
				"repetitionType",
				"repetitionsTypeChanged"
			],
			[
				"wignerSeitz",
				"wignerSeitzScheme"
			],
			[
				"wig",
				"wignerSeitzScheme"
			],
			[
				"debug",
				"debugEnergyForces"
			],
			[
				"H",
				"Hartree"
			],
			[
				"assertE",
				"assertTextEqual"
			],
			[
				"center",
				"center_index"
			],
			[
				"inte",
				"interactomic_coulomb"
			],
			[
				"gaussi",
				"gaussian_prefactors"
			],
			[
				"siz",
				"size_t"
			],
			[
				"di",
				"difference_density"
			],
			[
				"real",
				"real"
			],
			[
				"Eg",
				"Eg"
			],
			[
				"v2",
				"v2"
			],
			[
				"Sl",
				"SlaterKosterCalculator"
			],
			[
				"b",
				"b"
			],
			[
				"onsite",
				"onsiteCorrectionTable"
			],
			[
				"off",
				"offdiagonal_correction_table"
			],
			[
				"Non",
				"NonSelfConsistent"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/sona/generators/generator.py",
			"settings":
			{
				"buffer_size": 1329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/sona/interface.py",
			"settings":
			{
				"buffer_size": 3341,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 521.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"git",
				"Git: Blame"
			],
			[
				"git b",
				"Git: Blame"
			],
			[
				"git: diff",
				"Git: Diff Current File"
			],
			[
				"git ",
				"Git: Blame"
			],
			[
				"cl",
				"Clang Format: Format Selection"
			],
			[
				"cla",
				"Clang Format: Format Selection"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"clan",
				"Clang Format: Set Path"
			],
			[
				"git:",
				"Git: Blame"
			],
			[
				"git: bl",
				"Git: Blame"
			],
			[
				"git bla",
				"Git: Blame"
			],
			[
				"Package Control: g",
				"Package Control: Upgrade Package"
			],
			[
				"git bl",
				"Git: Blame"
			],
			[
				"gi: blame",
				"Git: Blame"
			],
			[
				"git blame",
				"Git: Blame"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"gi",
				"Git: Blame"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"",
				"Git: Blame"
			],
			[
				"g",
				"Git: Blame"
			],
			[
				"gitgutter",
				"GitGutter: Compare Against HEAD"
			],
			[
				"gitgutte",
				"GitGutter: Compare Against Branch"
			],
			[
				"GitGutter",
				"GitGutter: Compare Against Commit"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"sublimelinter:s",
				"SublimeLinter: Show All Errors"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"close",
				"File: Close All"
			]
		],
		"width": 700.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/gpenazzi/codes/sona"
	],
	"file_history":
	[
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Study/GateScan.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/greensfunctionutils.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/greensfunctioncalculator.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/blockmatrix.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/blockmatrix.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/unittest/math/utest_blockmatrix.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/unittest/math/utest_blockmatrix.h",
		"/home/gabriele/git/quantumsource-dev/c++/unittest/math/utest_greensfunctioncalculator.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/distributedmatrix.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/distributedmatrix.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/cs/types.h",
		"/home/gabriele/git/quantumsource-dev/c++/unittest/math/utest_greensfunctioncalculator.h",
		"/home/gabriele/git/quantumsource-dev/c++/unittest/math/utest_greensfunctionutils.h",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/TransmissionSpectrumTest.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/DFTSpinOrbit/DFTSpinOrbitTest.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Calculators/DensityFunctionalTheory/PlaneWaveCalculator/PlaneWaveKPointSymmetriesTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/TransmissionSpectrum.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Study/GateScanTest.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Utilities/PrincipalLayersUtilities.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/PrincipalLayersTest.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Analysis/TransmissionSpectrumTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/CurrentDensity.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/LocalDeviceDensityOfStates.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/TransmissionPathways.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Utilities/CompareAnalysisObjects.py",
		"/home/gabriele/Tasks/test_madness_july2017/graphene/graphene.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/DeltaTest/DeltaTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/Parameters/LDABasis.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Calculators/GenericParameters/GrimmeDFTD2Test.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Calculators/GenericParameters/GrimmeDFTD3Test.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Analysis/BaderTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/Boykin.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/Bassani.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterOnsiteParameters.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/ComputerScienceUtilities/Workflow/WorkflowTest.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Study/GateScanTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/Containers.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/BoykinTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/Workflow/Workflow.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/Bandstructure.py",
		"/home/gabriele/Tasks/21914_update_integration/test_python_only/BoykinStrainModel.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py",
		"/home/gabriele/Tasks/BoykinModelPackage/ReviewedUpdate/ReviewedPackage/BoykinStrainModel.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/InelasticTransmissionSpectrum.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/PhysicalQuantity.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/Flowchart.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Utilities/GlobalLoggerStream.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/NLLogger.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/LogRegionVerbosity.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/IO/SCFLoopInformationTest.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/Analysis/BandstructureTest.py",
		"/home/gabriele/git/quantumsource-dev/utilities/scripts/BasisSetOptimization/BasisSetTestSuite.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Math/AdaptiveIntegration.py",
		"/usr/share/applications/sublime_text.desktop",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/SCFLoopInformation.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/TerminalOutput.py",
		"/home/gabriele/git/quantumsource-dev/21919_review.diff",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/Serializable.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/NLSaveUtilities.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Dynamics/Optimization/Trajectory.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/Exceptions.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/Builders/DeviceHuckelBuilder.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/Interfaces/DeviceCalculatorInterface.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/DeviceHuckelCalculator.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/DeviceSlaterKosterCalculator.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrectionTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/Utilities.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/AtomicConfigurationUtilities.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/ElasticConstants.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Calculators/LowLevelEntitiesTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/SlaterKosterCalculator.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/BaseSlaterKosterCalculator.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NLTestCases.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/ConfigurationCopy.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/BaseProbeConfiguration.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/IVCurve.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/DeviceConfiguration.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Configurations/AtomicConfiguration.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculatorTests.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NanoLanguage.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/compositeschroedingercontainer.h",
		"/home/gabriele/Tasks/21914_update_integration/ultrathin.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/SCFLoop.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/schroedingercontainer.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/huckelcalculator.cpp",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/Blocks/Hamiltonian.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/CommonBuilder/BulkBuilder.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/devicedensitymatrixcalculator.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/huckelcalculator.h",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/Blocks/DensityMatrix.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/SemiEmpirical/Blocks/DifferenceMullikenPopulation.py",
		"/home/gabriele/tmp/21954_diff",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/Projection.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/NLFlag/_NLFlag.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/Timer.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/ComputerScienceUtilities/TimerTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/SelfEnergyCalculators/SelfEnergyCalculators.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Math/MonkhorstPackGrid.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/sparsematrix.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/sparsecsr.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/sparsecsr.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/boykintightbinding.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/boykintightbinding.cpp",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/CommonBuilder/AbstractBuilder.py",
		"/home/gabriele/Tasks/deviceBoykin/wire/BoykinStrainModel.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/IO/MuteLogRegions.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/ExternalCalculators/ExternalCalculatorInterface.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/Builders/DeviceLCAOBuilder.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/DeviceLCAOCalculator.py",
		"/home/gabriele/Tasks/deviceBoykin/wire/ultrathin.py",
		"/home/gabriele/git/quantumsource-dev/python/unittest/NLTest/Utilities/ConfigurationCollection.py",
		"/home/gabriele/Tasks/BoykinModelPackage/testTransmission/BoykinStrainModel.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/QuantityChecks.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/BasicValuesChecks.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Analysis/Analysis.py",
		"/home/gabriele/git/quantumsource-dev/python/functest/NLFuncTest/DFTSpinOrbit/BulkAnalysisTest.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Parameters.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/GenericParameters/CheckpointHandler.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Calculators/DensityFunctionalTheory/PseudoPotentials/PseudoPotential.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/CommonConcepts/Contours/SemiCircleContour.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/Study/Study.py",
		"/home/gabriele/git/quantumsource-dev/python/src/NL/ComputerScienceUtilities/CalculationCollection.py",
		"/home/gabriele/scratch/bulk/bulk.py",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/greensfunctioncalculator.h",
		"/home/gabriele/git/quantumsource-dev/c++/src/physics/slaterkostercalculator.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/sparsespinmatrix.cpp",
		"/home/gabriele/git/quantumsource-dev/c++/src/math/sparsespinmatrix.h"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"-*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"initial_state",
			"kernelSweeps",
			"above_",
			"Exception",
			"setOwnershi",
			"MPI",
			"communi",
			"world",
			"owner",
			"ownership",
			"isMyRo",
			"insertMissingBlo",
			"calculateparallel",
			"principal_layers_tole",
			"Bader",
			"electrode_lca",
			"bader_coordinate_tole",
			"electrode_lcao_cal",
			"stress_toleran",
			"density_tole",
			"stress_tolerance",
			"ivcur",
			"voltages",
			"voltage",
			"cache(",
			"cache",
			"number_of_valence",
			"Silicon",
			"nlread",
			"format(",
			"#R ",
			"transmission_args",
			"analysis_args",
			"analysisArgs",
			"transmissionArgs",
			"args",
			"NLExecution",
			"#R",
			"gate_scan",
			"CustomAn",
			"_results(",
			"_results",
			"_results(",
			"_results",
			"ATK_U",
			"GlobalLo",
			"__result",
			"current(",
			"result",
			".result(",
			"getKey",
			"logRe",
			"AdaptiveGrid",
			"__transmission_k_averaged",
			"Adaptive",
			"nlread",
			">>>",
			"getKey",
			"append",
			"gateVoltages",
			"setGateVoltages",
			"gateVoltages",
			"#R",
			"# R",
			"tablete",
			"LogRegion",
			"required_uid",
			"assertTasksEq",
			"__workflo",
			"NL.Com",
			"requires",
			"light",
			"saveResult",
			"nlsave",
			"self._graph",
			"NLEn",
			"pickle",
			"orig_scf",
			"present_me",
			"override_di",
			"_densityMa",
			"HuckelBuilder",
			"builder",
			"setCalculator",
			"setCalcul",
			"scfLoopDevice",
			"isSame",
			"checkCon",
			"isSameBulk",
			"self",
			"#R ",
			"DeviceConfiguration",
			"self._bulk",
			"#R",
			"injectCorr",
			"        \n",
			"injectCorre",
			"injectC",
			"calculator()",
			"_clone",
			"applyToH0",
			"test.",
			"All",
			"uniqueIds",
			"#R ",
			"#R",
			"applyToH0",
			"density_matri",
			"injectCorrection",
			"injec",
			"inject",
			"electrodeSingleStepFunction",
			"__calculator",
			"calculator",
			"electrodeSingleStep",
			"configuration.update(",
			"__calculator",
			"self.__calculator =",
			"_electrodeSin",
			"singleStepDevi",
			"singleStep",
			"scfLoop",
			"singleStepFunction",
			"Debug",
			"NL.Debug",
			"singleStep",
			"DeviceHuckelBuilder",
			"slater_koster_co"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"transmission_arguments",
			"analysis_arguments",
			"analysisArguments",
			"transmissionArguments",
			"arguments",
			"addGateVoltages",
			"fold",
			"foldProjectedNoncollinearMatrix",
			"createState",
			"electrodes()",
			"UpdateStatesAndEnergies",
			"defaultKPointSampling"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/sona/generators/generator.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1329,
						"regions":
						{
						},
						"selection":
						[
							[
								207,
								207
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"rulers":
							[
								79
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "src/sona/interface.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3341,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"rulers":
							[
								79
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 24.0
	},
	"pinned_build_system": "",
	"project": "sona.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inter",
				"src/sona/interface.py"
			],
			[
				"gene",
				"src/sona/generators/generator.py"
			],
			[
				"deviceconfiguratio",
				"python/src/NL/CommonConcepts/Configurations/DeviceConfiguration.py"
			],
			[
				"gatescan",
				"python/src/NL/Study/GateScan.py"
			],
			[
				"gatescantest",
				"python/unittest/NLTest/Study/GateScanTest.py"
			],
			[
				"utest_greens",
				"c++/unittest/math/utest_greensfunctioncalculator.cpp"
			],
			[
				"blockmatrix",
				"c++/src/math/blockmatrix.cpp"
			],
			[
				"distributed",
				"c++/src/math/distributedmatrix.cpp"
			],
			[
				"greensfunctionutil",
				"c++/src/math/greensfunctionutils.cpp"
			],
			[
				"greensfunctionca",
				"c++/src/math/greensfunctioncalculator.cpp"
			],
			[
				"greensfunctioncal",
				"c++/unittest/math/utest_greensfunctioncalculator.cpp"
			],
			[
				"utest_green",
				"c++/unittest/math/utest_greensfunctionutils.h"
			],
			[
				"utest_block",
				"c++/unittest/math/utest_blockmatrix.h"
			],
			[
				"utest_blockmatrix",
				"c++/unittest/math/utest_blockmatrix.cpp"
			],
			[
				"utest_blo",
				"c++/unittest/math/utest_blockmatrix.cpp"
			],
			[
				"transmissionspe",
				"python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/TransmissionSpectrumTest.py"
			],
			[
				"prinsipallayer",
				"python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/PrincipalLayersTest.py"
			],
			[
				"dftspinorbit",
				"python/functest/NLFuncTest/DFTSpinOrbit/DFTSpinOrbitTest.py"
			],
			[
				"planewavesymmetry",
				"python/functest/NLFuncTest/Calculators/DensityFunctionalTheory/PlaneWaveCalculator/PlaneWaveKPointSymmetriesTest.py"
			],
			[
				"transmission",
				"python/src/NL/Analysis/TransmissionSpectrum.py"
			],
			[
				"transmissionspectrumte",
				"python/functest/NLFuncTest/Analysis/TransmissionSpectrumTest.py"
			],
			[
				"grimmed",
				"python/functest/NLFuncTest/Calculators/GenericParameters/GrimmeDFTD3Test.py"
			],
			[
				"grimmedft",
				"python/functest/NLFuncTest/Calculators/GenericParameters/GrimmeDFTD2Test.py"
			],
			[
				"bade",
				"python/functest/NLFuncTest/Analysis/BaderTest.py"
			],
			[
				"ldabas",
				"python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/Parameters/LDABasis.py"
			],
			[
				"delta",
				"python/src/NL/Analysis/DeltaTest/DeltaTest.py"
			],
			[
				"ldabasis",
				"python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/Parameters/LDABasis.py"
			],
			[
				"currentdesni",
				"python/src/NL/Analysis/CurrentDensity.py"
			],
			[
				"localdevicedensityofsta",
				"python/src/NL/Analysis/LocalDeviceDensityOfStates.py"
			],
			[
				"principallayerte",
				"python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/PrincipalLayersTest.py"
			],
			[
				"slaterkosteronsite",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterOnsiteParameters.py"
			],
			[
				"boykin",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/Boykin.py"
			],
			[
				"bassani",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/Bassani.py"
			],
			[
				"workflowtest",
				"python/unittest/NLTest/ComputerScienceUtilities/Workflow/WorkflowTest.py"
			],
			[
				"boy",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/Boykin.py"
			],
			[
				"bandstructure",
				"python/src/NL/Analysis/Bandstructure.py"
			],
			[
				"band",
				"python/src/NL/Analysis/Bandstructure.py"
			],
			[
				"slaterkosters",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"workflow",
				"python/src/NL/ComputerScienceUtilities/Workflow/Workflow.py"
			],
			[
				"gaetscantest",
				"python/unittest/NLTest/Study/GateScanTest.py"
			],
			[
				"boykintest",
				"python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/BoykinTest.py"
			],
			[
				"transmissionpath",
				"python/src/NL/Analysis/TransmissionPathways.py"
			],
			[
				"containers",
				"python/src/NL/IO/Containers.py"
			],
			[
				"physicalquantity",
				"python/src/NL/CommonConcepts/PhysicalQuantity.py"
			],
			[
				"flowchart",
				"python/src/NL/ComputerScienceUtilities/Flowchart.py"
			],
			[
				"scfloopinfo",
				"python/unittest/NLTest/IO/SCFLoopInformationTest.py"
			],
			[
				"bandstructurete",
				"python/functest/NLFuncTest/Analysis/BandstructureTest.py"
			],
			[
				"globallo",
				"python/unittest/NLTest/Utilities/GlobalLoggerStream.py"
			],
			[
				"nllogger",
				"python/src/NL/IO/NLLogger.py"
			],
			[
				"gates",
				"python/src/NL/Study/GateScan.py"
			],
			[
				"transmissionspectrum",
				"python/src/NL/Analysis/TransmissionSpectrum.py"
			],
			[
				"physicalq",
				"python/src/NL/CommonConcepts/PhysicalQuantity.py"
			],
			[
				"workflo",
				"python/unittest/NLTest/ComputerScienceUtilities/Workflow/WorkflowTest.py"
			],
			[
				"workfl",
				"python/src/NL/ComputerScienceUtilities/Workflow/Workflow.py"
			],
			[
				"scfloopin",
				"python/src/NL/IO/SCFLoopInformation.py"
			],
			[
				"containe",
				"python/src/NL/IO/Containers.py"
			],
			[
				"seriali",
				"python/src/NL/IO/Serializable.py"
			],
			[
				"scfloop",
				"python/src/NL/IO/SCFLoopInformation.py"
			],
			[
				"devicecalculatorin",
				"python/src/NL/Calculators/Interfaces/DeviceCalculatorInterface.py"
			],
			[
				"devicehuckelbuilder",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/Builders/DeviceHuckelBuilder.py"
			],
			[
				"huckelcal",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py"
			],
			[
				"devicehuckelcalcul",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/DeviceHuckelCalculator.py"
			],
			[
				"slaterkostertestco",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"slaterkosterstrainco",
				"python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrectionTest.py"
			],
			[
				"devicehuckelca",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/DeviceHuckelCalculator.py"
			],
			[
				"huckelcalcula",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py"
			],
			[
				"deviceslaterkoster",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/DeviceSlaterKosterCalculator.py"
			],
			[
				"slaterkosterstraincorrectionte",
				"python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrectionTest.py"
			],
			[
				"slaterkosterstrain",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"slaterkosterstraincoo",
				"python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrectionTest.py"
			],
			[
				"slaterkosterca",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/SlaterKosterCalculator.py"
			],
			[
				"basesla",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/BaseSlaterKosterCalculator.py"
			],
			[
				"slaterkosterstr",
				"python/unittest/NLTest/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrectionTest.py"
			],
			[
				"slaterkosterstraincorrection",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"lowlevelentitieste",
				"python/unittest/NLTest/Calculators/LowLevelEntitiesTest.py"
			],
			[
				"workflowte",
				"python/unittest/NLTest/ComputerScienceUtilities/Workflow/WorkflowTest.py"
			],
			[
				"ivcurve",
				"python/src/NL/Analysis/IVCurve.py"
			],
			[
				"atomicconfiguration",
				"python/src/NL/CommonConcepts/Configurations/AtomicConfigurationUtilities.py"
			],
			[
				"baseprobeconfiguration",
				"python/src/NL/CommonConcepts/Configurations/BaseProbeConfiguration.py"
			],
			[
				"baseslaterkostercal",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/BaseSlaterKosterCalculator.py"
			],
			[
				"slaterkostercalculator",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/SlaterKosterCalculator.py"
			],
			[
				"slaterkostercal",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/SlaterKosterCalculator.py"
			],
			[
				"slaterkosterstra",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"kuckelcal",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py"
			],
			[
				"huckelca",
				"python/unittest/NLTest/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculatorTests.py"
			],
			[
				"nanolang",
				"python/src/NanoLanguage.py"
			],
			[
				"principal",
				"python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/PrincipalLayersTest.py"
			],
			[
				"gatesca",
				"python/src/NL/Study/GateScan.py"
			],
			[
				"work",
				"python/unittest/NLTest/ComputerScienceUtilities/Workflow/WorkflowTest.py"
			],
			[
				"basepro",
				"python/src/NL/CommonConcepts/Configurations/BaseProbeConfiguration.py"
			],
			[
				"devicecal",
				"python/src/NL/Calculators/Interfaces/DeviceCalculatorInterface.py"
			],
			[
				"bulkbuilde",
				"python/src/NL/Calculators/CommonBuilder/BulkBuilder.py"
			],
			[
				"devicehuckelcal",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/DeviceHuckelCalculator.py"
			],
			[
				"huckelcalculator",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py"
			],
			[
				"slaterkostercalcul",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/SlaterKosterCalculator.py"
			],
			[
				"devicehuck",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/DeviceHuckelCalculator.py"
			],
			[
				"devicesla",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/DeviceSlaterKosterCalculator.py"
			],
			[
				"devicehu",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/Builders/DeviceHuckelBuilder.py"
			],
			[
				"composite",
				"c++/src/physics/compositeschroedingercontainer.h"
			],
			[
				"devicedensityma",
				"c++/src/physics/devicedensitymatrixcalculator.h"
			],
			[
				"huckelcalcu",
				"python/src/NL/Calculators/SemiEmpirical/HuckelCalculator/HuckelCalculator.py"
			],
			[
				"hamiltoni",
				"python/src/NL/Calculators/SemiEmpirical/Blocks/Hamiltonian.py"
			],
			[
				"schroedinge",
				"c++/src/physics/schroedingercontainer.h"
			],
			[
				"atomiccon",
				"python/src/NL/CommonConcepts/Configurations/AtomicConfiguration.py"
			],
			[
				"projection",
				"python/src/NL/Analysis/Projection.py"
			],
			[
				"nlflag",
				"python/src/NL/ComputerScienceUtilities/NLFlag/_NLFlag.py"
			],
			[
				"timertest",
				"python/unittest/NLTest/ComputerScienceUtilities/TimerTest.py"
			],
			[
				"serilizable",
				"python/src/NL/IO/Serializable.py"
			],
			[
				"container",
				"python/src/NL/IO/Containers.py"
			],
			[
				"timer",
				"python/src/NL/ComputerScienceUtilities/Timer.py"
			],
			[
				"base",
				"python/src/NL/CommonConcepts/Configurations/BaseProbeConfiguration.py"
			],
			[
				"devicecon",
				"python/src/NL/CommonConcepts/Configurations/DeviceConfiguration.py"
			],
			[
				"principallayertes",
				"python/functest/NLFuncTest/Configurations/Device/PrincipalLayers/PrincipalLayersTest.py"
			],
			[
				"monkho",
				"python/src/NL/Math/MonkhorstPackGrid.py"
			],
			[
				"sparsematrix",
				"c++/src/math/sparsematrix.h"
			],
			[
				"sparsecsr",
				"c++/src/math/sparsecsr.h"
			],
			[
				"slaterkosterstraincorre",
				"python/src/NL/Calculators/SemiEmpirical/SlaterKosterCalculator/Parameters/SlaterKosterStrainCorrection.py"
			],
			[
				"gate",
				"python/src/NL/Study/GateScan.py"
			],
			[
				"devicelcaobuild",
				"python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/Builders/DeviceLCAOBuilder.py"
			],
			[
				"devicelcaocal",
				"python/src/NL/Calculators/DensityFunctionalTheory/LCAOCalculator/DeviceLCAOCalculator.py"
			],
			[
				"baseprobeconigurat",
				"python/src/NL/CommonConcepts/Configurations/BaseProbeConfiguration.py"
			],
			[
				"configurationclle",
				"python/unittest/NLTest/Utilities/ConfigurationCollection.py"
			],
			[
				"paramte",
				"python/src/NL/CommonConcepts/Parameters.py"
			],
			[
				"checkpointhan",
				"python/src/NL/Calculators/GenericParameters/CheckpointHandler.py"
			],
			[
				"deviceconf",
				"python/src/NL/CommonConcepts/Configurations/DeviceConfiguration.py"
			],
			[
				"contain",
				"python/src/NL/IO/Containers.py"
			],
			[
				"ban",
				"python/functest/NLFuncTest/DFTSpinOrbit/BulkAnalysisTest.py"
			],
			[
				"configuartionco",
				"python/unittest/NLTest/Utilities/ConfigurationCollection.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 729.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/git/quantumsource/quantumsource.sublime-project"
			]
		],
		"width": 554.0
	},
	"select_symbol":
	{
		"height": 357.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"NO_INDE",
				"NO_INDEX"
			],
			[
				"testCarbonM",
				"testCarbonWireMetaGGA"
			],
			[
				"testLCAOGra",
				"testLCAOGrapheneSheet"
			],
			[
				"setAndCheck",
				"setAndCheckBias"
			],
			[
				"setRegionVer",
				"setRegionVerbosity"
			],
			[
				"adaptivegrid",
				"AdaptiveGrid"
			],
			[
				"nlread",
				"nlread"
			],
			[
				"nlsave",
				"_nlsave"
			],
			[
				"terminal",
				"TerminalOutput"
			],
			[
				"LogRe",
				"LogRegion"
			],
			[
				"NLExe",
				"NLExecutionError"
			],
			[
				"ToHdf",
				"_toHDF5Group"
			],
			[
				"ToHDF",
				"toHDF5Group"
			],
			[
				"_densityM",
				"_densityMatrixCalculator"
			],
			[
				"isSameBulk",
				"isSameBulkConfiguration"
			],
			[
				"strain",
				"strainInDirection"
			],
			[
				"strainCon",
				"strainConfiguration"
			],
			[
				"checkconsi",
				"checkConsistentConfigurations"
			],
			[
				"_update",
				"_update"
			],
			[
				"update",
				"update"
			],
			[
				"setUpNL",
				"setUpNLClass"
			],
			[
				"getTemporary",
				"getTemporaryFileName"
			],
			[
				"issamebulk",
				"isSameBulkConfiguration"
			],
			[
				"isConfiguration",
				"isSameBulkConfiguration"
			],
			[
				"_clone",
				"_clone"
			],
			[
				"setCalculator",
				"setCalculator"
			],
			[
				"updateRequi",
				"_updateRequired"
			],
			[
				"setAndCheckLo",
				"setAndCheckLogFilenamePrefix"
			],
			[
				"assertNorm",
				"assertCloseInNormInf"
			],
			[
				"assertSequences",
				"assertSequencesNotEqual"
			],
			[
				"recursionself",
				"RecursionSelfEnergy"
			],
			[
				"nli",
				"nlinspect"
			],
			[
				"isUpdated",
				"_isUpdated"
			],
			[
				"needsUp",
				"_needsUpdate"
			],
			[
				"needs",
				"_needsUpdate"
			],
			[
				"mute",
				"MuteLogRegions"
			],
			[
				"assertSequence",
				"assertSequencesAlmostEqual"
			],
			[
				"strainco",
				"strainConfiguration"
			],
			[
				"assertCon",
				"assertConfigurationsEqual"
			],
			[
				"isUp",
				"_isUpdated"
			],
			[
				"setMetalli",
				"setMetallicRegions"
			],
			[
				"temporary",
				"TemporaryFile"
			],
			[
				"getTempo",
				"getTemporaryFileName"
			],
			[
				"isQuantity",
				"isQuantitySequence"
			],
			[
				"configurationCop",
				"configurationCopyWithCalculator"
			],
			[
				"study",
				"Study"
			],
			[
				"confi",
				"configurationCopy"
			],
			[
				"configuration",
				"configurationCopy"
			],
			[
				"setAndCheckCon",
				"setAndCheckConfiguration"
			],
			[
				"isSequence",
				"isQuantitySequence"
			],
			[
				"setAndCheckVol",
				"setAndCheckElectrodeVoltages"
			],
			[
				"setAndCheckBias",
				"setAndCheckBiasList"
			],
			[
				"configurationcop",
				"configurationCopy"
			],
			[
				"copycon",
				"_copyConfiguration"
			],
			[
				"realmatri",
				"realMatrixToNumpy"
			],
			[
				"spinrow",
				"SpinRow"
			],
			[
				"neighbourLi",
				"neighbourList"
			],
			[
				"calculateLowdinS",
				"calculateLowdinStrainCorrectionMatrix"
			],
			[
				"NO_IN",
				"NO_INDEX"
			],
			[
				"addTags",
				"addTags"
			],
			[
				"_shi",
				"_shiftsForConfiguration"
			],
			[
				"makeFull",
				"makeFull"
			],
			[
				"GoldBulkCal",
				"GoldBulkCalculation"
			],
			[
				"GoldBulkC",
				"GoldBulkCalculation"
			],
			[
				"random",
				"randomInt"
			],
			[
				"fastAdd",
				"fastAddInto"
			],
			[
				"fastAddIn",
				"fastAddInto"
			],
			[
				"fourierTransform",
				"fourierTransform"
			],
			[
				"fourierTr",
				"fourierTransform"
			],
			[
				"MatrixType",
				"MatrixType"
			],
			[
				"foldMa",
				"foldMatrix"
			],
			[
				"foldma",
				"foldMatrix"
			],
			[
				"foldmatrix",
				"foldMatrix"
			],
			[
				"getComponent",
				"getComponent"
			],
			[
				"complex",
				"ComplexDistributedMatrix"
			],
			[
				"complexdistributedmatri",
				"ComplexDistributedMatrix"
			],
			[
				"DistributedCom",
				"DistributedComplexCSR"
			],
			[
				"Process",
				"ProcessGrid"
			],
			[
				"ASSERT_SP",
				"ASSERT_SPARSESPINMATRICES_EQUAL"
			],
			[
				"complexdistributed",
				"ComplexDistributedMatrix"
			],
			[
				"report",
				"testReport"
			],
			[
				"distributedfourier",
				"distributedFourierTransform"
			],
			[
				"indexToIJ",
				"indexToIJK"
			],
			[
				"distributed",
				"distributedFourierTransform"
			],
			[
				"distributeddia",
				"DistributedDiagonalizationSolverState"
			],
			[
				"distributedfour",
				"distributedSparseFourierTransform"
			],
			[
				"BulkSCFPro",
				"BulkSCFProgressInformation"
			],
			[
				"creteGri",
				"createGridDescriptor"
			],
			[
				"abstract",
				"AbstractCheckConvergenceHamiltonian"
			],
			[
				"Diagonalization",
				"DiagonalizationSolver"
			],
			[
				"abstractch",
				"AbstractCheckConvergenceHamiltonian"
			],
			[
				"AbstractCheck",
				"AbstractCheckConvergenceHamiltonian"
			],
			[
				"rotate",
				"rotate"
			],
			[
				"residu",
				"residual"
			],
			[
				"covalentra",
				"elementsToCovalentRadii"
			],
			[
				"covalen",
				"covalentRadius"
			],
			[
				"gaussfermi",
				"buildGaussFermiQuadrature"
			],
			[
				"selectlargestdef",
				"_selectLargestDefaultFromElements"
			],
			[
				"densityMeshCuto",
				"densityMeshCutoff"
			],
			[
				"removeCalculator",
				"testRemoveCalculator"
			],
			[
				"contourintegralfrom",
				"contourIntegralParametersFromModel"
			],
			[
				"densityMesh",
				"densityMeshCutoff"
			],
			[
				"FaceCenter",
				"FaceCenteredCubic"
			],
			[
				"SpinOrbit",
				"SpinOrbit"
			],
			[
				"facecentered",
				"FaceCenteredCubic"
			],
			[
				"NoSto",
				"NoStorage"
			],
			[
				"_UPGRADE",
				"_upgrade"
			],
			[
				"transmission",
				"transmissionSpectra"
			],
			[
				"block",
				"Block"
			],
			[
				"assertAlmostEqu",
				"assertAlmostEqual"
			],
			[
				"parallelconfi",
				"testParallelConfigurationMapConfigurations"
			],
			[
				"assersequences",
				"assertSequencesAlmostEqual"
			],
			[
				"testMonkhorstP",
				"testMonkhorstPackGridLegacySupport2015"
			],
			[
				"testOneDimensiona",
				"testOneDimensionalSampling"
			],
			[
				"scope_execute",
				"scope_execute"
			],
			[
				"scope_e",
				"scope_execute"
			],
			[
				"_script",
				"_script"
			],
			[
				"numericalAccuracyParametersToS",
				"numericalAccuracyParametersToScript"
			],
			[
				"assertText",
				"assertTextEqual"
			],
			[
				"testScriptWithPairPo",
				"testScriptWithPairPotential"
			],
			[
				"testOneDimen",
				"testOneDimensionalSampling"
			],
			[
				"devicelcaocalculatortoken",
				"DeviceLCAOCalculatorToken"
			],
			[
				"DeviceLCAOCal",
				"DeviceLCAOCalculatorToken"
			],
			[
				"testMonkhorstPackGridforDeviceHuckelCalculator",
				"testMonkhorstPackGridforDeviceHuckelCalculator"
			],
			[
				"maskslot",
				"maskSlot"
			],
			[
				"Mask",
				"Mask"
			],
			[
				"path",
				"getPath"
			],
			[
				"fileex",
				"fileExists"
			]
		],
		"width": 726.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 218.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
